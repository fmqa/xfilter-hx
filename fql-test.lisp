(defpackage fql/test
  (:use :cl :fiveam))
(in-package :fql/test)

(def-suite fql :description "Filter query DSL test")

(def-suite* parsing :in fql)

(test clauses
  (is (equalp (eqvalg:equality-of (eqvalg:column-of "table" "column") 1)
              (fql:parse-filter "table.column=1")))
  (is (equalp (eqvalg:equality-of (eqvalg:column-of "table" "column") "x")
              (fql:parse-filter "table.column=x")))
  (is (equalp (eqvalg:equality-of (eqvalg:column-of "table" "column") 15.1)
              (fql:parse-filter "table.column=15.1")))
  (is (equalp (eqvalg:equality-of (eqvalg:column-of "table" "column") -2)
              (fql:parse-filter "table.column=-2")))
  (is (equalp (eqvalg:equality-of (eqvalg:column-of "table" "column") -2.5)
              (fql:parse-filter "table.column=-2.5")))
  (is (equalp (eqvalg:equality-of (eqvalg:column-of "table" "column") "x:y")
              (fql:parse-filter "table.column='x:y'")))
  (is (equalp (eqvalg:conjunction-of (eqvalg:equality-of (eqvalg:column-of "table" "column") 46)
                                     (eqvalg:strict-equality-of (eqvalg:column-of "table" "var") "x"))
              (fql:parse-filter "table[var=x].column=46")))
  (is (equalp (eqvalg:conjunction-of (eqvalg:equality-of (eqvalg:column-of "table" "column") 46)
                                     (eqvalg:strict-equality-of (eqvalg:column-of "table" "var") 11))
              (fql:parse-filter "table[var=11].column=46")))
  (is (equalp (eqvalg:conjunction-of (eqvalg:equality-of (eqvalg:column-of "table" "column") 46)
                                     (eqvalg:strict-equality-of (eqvalg:column-of "table" "var") 11.8))
              (fql:parse-filter "table[var=11.8].column=46")))
  (is (equalp (eqvalg:conjunction-of (eqvalg:equality-of (eqvalg:column-of "table" "column") 46)
                                     (eqvalg:strict-equality-of (eqvalg:column-of "table" "var") -17))
              (fql:parse-filter "table[var=-17].column=46")))
  (is (equalp (eqvalg:conjunction-of (eqvalg:equality-of (eqvalg:column-of "table" "column") 46)
                                     (eqvalg:strict-equality-of (eqvalg:column-of "table" "var") -17.3))
              (fql:parse-filter "table[var=-17.3].column=46"))))

(test options
  (is (equalp (list (eqvalg:equality-of (eqvalg:column-of "table" "column") 1))
              (fql:parse-filter-with-options "table.column=1")))
  (is (equalp (list (eqvalg:equality-of (eqvalg:column-of "table" "column") 12) '("bin" . "ALL"))
              (fql:parse-filter-with-options "table.column=12;bin=ALL")))
  (is (equalp (list (eqvalg:conjunction-of (eqvalg:equality-of (eqvalg:column-of "table" "column") 12)
                                           (eqvalg:strict-equality-of (eqvalg:column-of "table" "x") 1))
                    '("bin" . "ALL"))
              (fql:parse-filter-with-options "table[x=1].column=12;bin=ALL"))))
